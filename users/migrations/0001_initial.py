# Generated by Django 5.1.2 on 2024-10-20 16:42

import users.models.user
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255, null=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('email_confirmed_at', models.DateTimeField(null=True)),
                (
                    'email_confirmation_token',
                    models.CharField(max_length=255, null=True, unique=True),
                ),
                ('email_confirmation_sent_at', models.DateTimeField(null=True)),
                (
                    'email_candidate',
                    models.EmailField(max_length=254, null=True, unique=True),
                ),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                (
                    'forgot_password_token',
                    models.CharField(max_length=255, null=True, unique=True),
                ),
                ('forgot_password_token_sent_at', models.DateTimeField(null=True)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                (
                    'last_login',
                    models.DateTimeField(
                        blank=True, null=True, verbose_name='last login'
                    ),
                ),
                ('otp_secret', models.CharField(
                    max_length=255, null=True, unique=True)),
                ('is_otp_active', models.BooleanField(default=False)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('active', 'active'),
                            ('inactive', 'inactive'),
                            ('investigate', 'investigate'),
                            ('blocked', 'blocked'),
                        ],
                        default='active',
                        max_length=25,
                    ),
                ),
                ('status_reason', models.TextField(null=True)),
                (
                    'role',
                    models.CharField(
                        choices=[
                            ('user', 'user'),
                            ('admin', 'admin'),
                            ('editor_admin', 'editor_admin'),
                            ('super_admin', 'super_admin'),
                        ],
                        default='user',
                        max_length=25,
                    ),
                ),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('joined_date', models.DateTimeField(auto_now_add=True)),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('-id',),
            },
            managers=[
                ('objects', users.models.user.UserManager()),
            ],
        ),
    ]
